Abraham Mowad
Nathaniel Furbeyre

Our TinyFS implemenation appears to be fully functional. The Single File Driver
demonstrates opening, closing, deleting, reopening, reading, writing, and 
seeking of a single file. The behavior is as expect. 

Similarly, for the Multi File Driver demonstrates opening multiple files at the
same time. It shows how a new file is always assigned the lowest available 
file descriptor. Reading and writing with one file does not affect the status
of other open files. 

A third section to our driver has the program demostrating multi disk behavior.
This includes opening and mounting 1 disk, performing IO on that disk, opening
and mounting a second disk, performing IO and then going back to perform more IO
on the first disk.

The two additional features we added were time stamps and directory listing/renaming.
   1. Renaming a file does exactly what it sounds like: renames a file without 
      changing the contents of the file. Directory listing lists all of the 
      open files in the disk, as well as the file size for each file in bytes.
   2. Time stamps show the created, modified and accessed times for each of 
      the file. In order to demonstrate the functionality sleep() is called. 
      This causes pauses in the execution of the program. The created, modified 
      and access times of a file reflect the elapsed time during the driver.

As far as bugs/limitations and other notes...
   There are 2 separate files for libTinyFS. One file seemed too long.

   NOTE: There is no Makefile included for this program. To run the program, simply 
   compile with gcc *.c and then run with ./a.out.
